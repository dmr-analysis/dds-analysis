#!/bin/sh
#Here we assume 1. mutation blocks overlapping to enhancers and differential methylatoin regions are done (e.g., demo7 of bpb3 package)
#               2. and differential methylated regions (DMR) are already done by dmr_analysis
#This script is similar to demo1 (e.g., integrated analysis of DEG, DMR, mutation blocks, and TAD - in paper https://pubmed.ncbi.nlm.nih.gov/35495111/)
#But we only consider mutation blocks that are overlapping with enhancers and differential DNA methylatioin regions
#The output folders: out_chromSegment, out_expresssion, out_genome, out_dds may need to be created manually!!


# path of main folder to output data
OUT_FOLDER='../../data/fl_mr/out_data/'
# path of input data folder
IN_FOLDER='../../data/fl_mr/in_data/'

#Path of mutation blocks and block summarys file exported by bpb3 package
IN_BLOCKS=${IN_FOLDER}'/bpb3_demo7_mr_enhancers/out/mussd_blocks/'
IN_BLOCK_SUMMARY='blocks_summary.tsv'

#Path of mutation blocks with patient ID that will be exported by  dds_analysis find_block_patientID
#IN_BLOCK_PATIENT=${IN_BLOCKS}'/blocks_summary_and_patientID2.tsv'

#Other INPUT PATH and files et al
#Convert bpb3 mutation blocks summary file to a bed format file with positions 
dds_analysis bpb3summary2bed_format --in_block_summary_file ${IN_BLOCKS}/$IN_BLOCK_SUMMARY
echo  ${IN_BLOCKS}'/'${IN_BLOCK_SUMMAR}
echo "preprocess_data - Done"

replace='_block_position.bed'
finds='.tsv'
IN_BLOCK_FILE=${IN_BLOCK_SUMMARY//$finds/$replace}

#Input path of a list of predefined genomic regions that will be used to map mutation blocks, and DMRs.
IN_GENOME_REGIONS=${IN_FOLDER}'/in_genome_regions/'
IN_LIST_REGIONS='list_region_files.txt_gencode'
IN_GENOME_refFlat=${IN_GENOME_REGIONS}'/data/gencode.v19.annotation_gene.ref_clean_sorted.bed'

#path of genome lib information files such as TAD,  chromatin segmentant, and genome files et al
IN_GENOME_LIB='../../data/'
#path of chromatin segment files that will be used to intersect with mutation blocks
IN_CHROMSEG=${IN_GENOME_LIB}'/chromSegment/hg19/'

#path of TAD information that will be used to map mutation blocks
IN_TAD=${IN_GENOME_LIB}'/in_tad/'
#path to common TAD positions accross 5 human cell lines
IN_TAD_INFO=${IN_TAD}'/Table4_TAD_annotations_sorted_chr.bed'
#pnath to common TAD boundary position among 5 human cell lines
IN_TAD_BOUNDARY=${IN_TAD}'/Table1_common_boundaries_merged_sorted_chr.bed'

#path to gene positions in sorted bed format which is generated by s1_run_annotation.sh
IN_GENE_POSITION=${IN_GENOME_REGIONS}'data/gene_Up1_Down1removedShort.bed'

#Path of differentially methylated regions, differentially expressed genes, and output folder for mutation blocks mapped to predefined genomic regions.
#Input path to DMRs/MRs predicted and ranked by dmr_analysis
IN_DMR=${IN_FOLDER}'/DMR_CpG_context/2_chroms_all_mr_data_range_dmrRanking.bed'

#path to DEG genes exported from bpb3 package
IN_EXPRESS=${IN_FOLDER}'/in_DEG/differentially_expressed_genes_nonfolder.txt'

#add N bp flank region on the two sides of mutation blocks before intersecting them to DMRs
FLANK_BP=500

#OUTPUT PATH
#path for exporting mutation blocks mapped to predefined genomic regions
OUT_GENOME=${OUT_FOLDER}'/out_genome/'
#path for exporting mutation blocks mapped to chromatin segmentations 
OUT_CHROMSEG=${OUT_FOLDER}'/out_chromSegment/'
#path for exported mutation blocks assoicated with DEGs
OUT_EXPRESS=${OUT_FOLDER}'/out_expression/'
#path for final results
OUT_FINAL=${OUT_FOLDER}/'out_DmrDeg2block'

#1. map mutation block to predifined genomic regions
dds_analysis map_block2genome --in_sortedBlock_file $IN_BLOCK_FILE  \
        --in_genomeRegion_file $IN_LIST_REGIONS \
        --in_referenceGenome_file $IN_GENOME_refFlat \
        --out_file_folder $OUT_GENOME --is_MR_or_Blocks 1
echo map_block2genome - Done
echo ""
#read  -n 1 -p "Click for continuing 1 :"
echo ""
 
#2. map mutation block to chromSegment, here assume all input mutation block has the same input file as the map_block2genome
dds_analysis map_block2chromSegment --in_sortedBlock_file $IN_BLOCK_FILE \
        --in_chromSegment_folder $IN_CHROMSEG \
        --out_file_folder $OUT_CHROMSEG --is_MR_or_Blocks 1
echo map_block2chromSegment - Done
echo ""
#read  -n 1 -p "Click for continuing 2 :"
echo ""

#3. map mutation blocks to DMR after adding flank regions to two-sides of blocks if it is needed
dds_analysis map_block2dmr --in_sortedBlock_file $IN_BLOCK_FILE \
        --in_dmr_file $IN_DMR \
        --in_flank_region2block $FLANK_BP --out_file_folder $OUT_FOLDER
echo map_block2dmr - Done
echo ""
#if the file name is known then skip this
read -p "Enter exported map_block2dmr file name with full path for continuing 3: "  IN_BLOCK_DMR
echo ""
echo "IN_BLOCK_DMR: $IN_BLOCK_DMR "
echo ""

#4. combine genomic regions with block information and find their associated differential expressed genes
dds_analysis find_geneExp4block --in_blocks_genome_folder $OUT_GENOME \
        --in_sortedBlock_file $IN_BLOCK_FILE \
        --in_deg_file $IN_EXPRESS \
        --in_feature_list 'TSS,gene,TES,5dist,enhancers' \
        --out_file_folder $OUT_EXPRESS
echo find_geneExp4block - Done
echo ""
#read  -n 1 -p "Click for continuing 4 :"
echo ""

#5. find patient IDs for each mutation block, this step can be slow if the number of blocks is large!
#but only run once for block summary from BB2
#this one does not test because it is too slow
dds_analysis find_block_patientID \
	--in_block_summary_file ${IN_BLOCKS}/$IN_BLOCK_SUMMARY  \
	--in_block_folder $IN_BLOCKS
echo find_block_patientID - Done
echo ""
#if file name is known then skip this line
#read -p "Enter exported patient ID file name with full path for continuing 4: "  IN_BLOCK_PATIENT
echo "" 
IN_BLOCK_PATIENT=${IN_BLOCKS}'/blocks_summary_and_patientID2.tsv'
echo "IN_BLOCK_PATIENT: $IN_BLOCK_PATIENT "
echo ""

#read  -n 1 -p "Click for continuing 5 :" 
echo ""

#This file exported from earlier step: map_block2dmr
#this file name need be manually inputed 
#IN_BLOCK_DMR='blocks_summary_block_position_0flank_0.7Proba_2blocks_2blocks2mr_2blocks2dmr'
####################

#6. combine DMR, DEG and block information together
dds_analysis combine_dmr_deg2block --in_sortedBlock_patient_file $IN_BLOCK_PATIENT \
	--in_dmr_file  ${IN_BLOCK_DMR} \
        --in_deg_folder_and_file_suffix ${OUT_EXPRESS}'/*.tsv' \
	--out_file_folder $OUT_FINAL
echo combine_dmr_deg2block - Done
echo ""
echo ""

finds='.tsv'
replace=''
FULL_PATH_IN_BLOCK_DMR=${IN_BLOCK_DMR//$finds/$replace}
IN_BLOCK_DMR_NAME=$(basename  "$FULL_PATH_IN_BLOCK_DMR")
echo $IN_BLOCK_DMR_NAME

###########
 #7. filter blocks based DMR or DEG information
 dds_analysis filter_blocks --in_combined_DmrDegBlock_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info.tsv
 echo filter_blocks - Done
echo ""
#read -n 1 -p "Click for continuing 7: "
echo ""


#8. collect unique genes name from predicted blocks with DMR and DEG
dds_analysis collect_gene_names4blocks --in_filtered_blockGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_and_DEG.tsv
dds_analysis collect_gene_names4blocks --in_filtered_blockGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG.tsv
echo collect_gene_names2blocks - Done

#if no TAD information availble then we can skip below two lines of check_block_gene_inTAD 
#but use the exported file from collect_gene_names4blocks for step 10 gene ranking !! 
#9.  check whether the block/gene/ in the same TAD or boundariy
dds_analysis check_block_gene_inTAD --in_filtered_blockUqGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_and_DEG_uniqGene.tsv \
        --in_gene_position_file ${IN_GENE_POSITION} \
        --in_TAD_position_file ${IN_TAD_INFO}  \
        --in_TAD_boundary_file ${IN_TAD_BOUNDARY} 
echo check_block_gene_inTAD - Done for DMR and DEG 
echo ""

dds_analysis check_block_gene_inTAD --in_filtered_blockUqGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG_uniqGene.tsv \
        --in_gene_position_file ${IN_GENE_POSITION} \
        --in_TAD_position_file ${IN_TAD_INFO} \
        --in_TAD_boundary_file ${IN_TAD_BOUNDARY}
echo check_block_gene_inTAD - Done for DMR or DEG
echo ""

#10. rank gene list
#here tss=4, tes=enhancer=gene=2, 5dist=1
#if there is not a TAD information available for the filtering, then we can use  $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG_uniqGene.tsv as input for unique_gene_file
dds_analysis dds_geneRanking --in_unique_gene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG_uniqGene_commonTAD_Boundary_list2UqGene.tsv \
       --in_DEG_file ${IN_EXPRESS} \
       --in_DMR_file ${IN_DMR} -inCutoff 0.5
echo geneRanking - Done
echo ""

#11. find enhancer target genes
echo ""
echo " For results geneRanking in out_DmrDeg2block (either DMR_and_DEG or DMR_or_DEG"
#if file name is known then skip this line
#read -p "Enter dds_geneRanking exported blocks_summary_block_position_* file with full path for continuing : "  IN_GENE2BLOCK
IN_GENE2BLOCK='_deg_info_filtered_DMR_or_DEG_uniqGene_commonTAD_Boundary_list2UqGene.tsv'

finds='.tsv'
replace='_selectedGenes_gt_0.5.txt'
IN_GENE2BLOCK=${IN_GENE2BLOCK//$finds/$replace}
IN_GENE2BLOCK=$OUT_FINAL/${IN_BLOCK_DMR_NAME}${IN_GENE2BLOCK}

echo ""
echo "IN_GENE2BLOCK: $IN_GENE2BLOCK "
echo ""
SELECTED_GENE='BCL2'
dds_analysis find_enhancer_target_genes --in_enhancer_file_folder ${IN_FOLDER}/in_enhancer/hg19_enhancer2gene_bed \
	--in_DDS_file ${IN_GENE2BLOCK} \
	--in_selected_gene ${SELECTED_GENE} --out_folder ${OUT_FOLDER}/out_enhancers

echo find_enhancer_target_genes - Done - ${SELECTED_GENE}



