#!/bin/sh
#Here we assume 1. map mutation block to genomic regions and 
#		2. predicted DMR 
#		are already donne in bpb3 and dmr_analysis, respectively
#This is a demo for analyzing FL data (e.g., integrated analysis of DEG, DMR, mutation blocks, and TAD) in paper https://pubmed.ncbi.nlm.nih.gov/35495111/

### -- Parameters -- ####
##---INPUT PATH and files et al

#path of main input data folder
IN_FOLDER='../../data/fl_12samples/in_data/'

#a) Path of mutation blocks and block summarys files exported by bpb3 package
IN_BLOCKS=${IN_FOLDER}'/bpb3_demo3_fl_cohort_small/out/mussd_blocks/'
IN_BLOCK_SUMMARY='blocks_summary.tsv'
#Path of mutation blocks with patient ID will be exported later by  dds_analysis find_block_patientID

#convert bpb3 predicted mutation block summary file to bed format file with positions. This is done by bpb3summary_format 
dds_analysis bpb3summary2bed_format --in_block_summary_file ${IN_BLOCKS}/$IN_BLOCK_SUMMARY
echo  ${IN_BLOCKS}'/'${IN_BLOCK_SUMMAR}
echo "preprocess_data - Done"

#make file name of the bed format of block summary file that will be used in the rest of analysis
replace='_block_position.bed'
finds='.tsv'
IN_BLOCK_FILE=${IN_BLOCK_SUMMARY//$finds/$replace}

#b) Path of predicted DMRs/MRs from "dmr_analysis" 
IN_GENOME_REGIONS=${IN_FOLDER}'/final_demo_data/fl_12samples/out_data/DMR_CpG_context/'
#a list of predefined genomic regions that will be used to map mutation blocks.
#This file is generated by dmr_analysis dmr_gene_annotation but user has to double check the location of files in this list if you need to add enhancer or other genomic region files
IN_LIST_REGIONS='list_region_files.txt'
#c) Path to refFlat gene annotation file that generated by hmst-seq-analyzer
IN_GENOME_refFlat=${IN_GENOME_REGIONS}'/data/hg19.refFlat_clean_sorted.bed'

#d) Path of other genomic information files such as TAD,  chromatin segmentant, and genome files et al
IN_GENOME_LIB='../../data/'
#path of chromatin segment files that will be used to intersect with mutation blocks
IN_CHROMSEG=${IN_GENOME_LIB}'/chromSegment/hg19/'

#e) Path of TAD information that will be used to map mutation blocks
IN_TAD=${IN_GENOME_LIB}'/in_tad/'

#f) Path to gene position file in sorted bed format which is generated by hmst-seq-analyzer
IN_GENE_POSITION=${IN_TAD}'/out/data/gene_Up1_Down1removedShort.bed'

#g) Path to common TAD positions accross 5 human cell lines
IN_TAD_INFO=${IN_TAD}'/Table4_TAD_annotations_sorted_chr.bed'
#path to common TAD boundary position among 5 human cell lines
IN_TAD_BOUNDARY=${IN_TAD}'/Table1_common_boundaries_merged_sorted_chr.bed'

#Path of differentially methylated regions, differentially expressed genes, and output folder of mutation blocks mapped to predefined genomic regions.
#h) Path to DMRs predicted and ranked by dmr_analysis
IN_DMR=${IN_GENOME_REGIONS}'/2_chroms_all_mr_data_range_dmrRanking.bed'

#i) path to DEG genes exported from bpb3 package
IN_EXPRESS=${IN_FOLDER}'/bpb3_demo3_fl_cohort_small/out/differentially_expressed_genes.txt'

#Try to add N bp flank region on the two sides of mutation blocks before intersecting them with DMRs
FLANK_BP=0

###---OUTPUT PATH
# path of main output data folder
OUT_FOLDER='../../data/fl_12samples/out_data/'

#path for exporting mutation blocks mapped to predefined genomic regions
OUT_GENOME=${OUT_FOLDER}'/out_genome/'
#path for exporting mutation blocks mapped to chromatin segmentations 
OUT_CHROMSEG=${OUT_FOLDER}'/out_chromSegment/'
#path for exported mutation blocks assoicated with DEGs
OUT_EXPRESS=${OUT_FOLDER}'/out_expression/'
#path for final results that mutation blocks assocated with DMR, DEG and TAD
OUT_FINAL=${OUT_FOLDER}/'out_DmrDeg2block'

###### -- START to Run --- ########## 
#1. map mutation block to genomic regions
dds_analysis map_block2genome --in_sortedBlock_file $IN_BLOCK_FILE  \
        --in_genomeRegion_file $IN_LIST_REGIONS \
        --in_referenceGenome_file $IN_GENOME_refFlat \
        --out_file_folder $OUT_GENOME --is_MR_or_Blocks 1
echo 1. map_block2genome - Done
echo ""
echo ""
 
#2. map mutation block to chromSegment, here assume all input mutation block has the same input file as the map_block2genome
dds_analysis map_block2chromSegment --in_sortedBlock_file $IN_BLOCK_FILE \
        --in_chromSegment_folder $IN_CHROMSEG \
        --out_file_folder $OUT_CHROMSEG --is_MR_or_Blocks 1
echo 2. map_block2chromSegment - Done
echo ""
echo ""

#3. map mutation blocks to DMR after adding flank regions in two-side of blocks if it is needed
dds_analysis map_block2dmr --in_sortedBlock_file $IN_BLOCK_FILE \
        --in_dmr_file $IN_DMR \
        --in_flank_region2block $FLANK_BP --out_file_folder $OUT_FOLDER
echo ""
echo 3. map_block2dmr - Done
echo ""
read -p "To continue please copy the export file name and path from step 3. map_block2dmr then click return : "  IN_BLOCK_DMR
echo ""
echo "IN_BLOCK_DMR: $IN_BLOCK_DMR "
echo ""
echo ""

#4. combine genomic regions with mutation block information and find differential expressed genes
dds_analysis find_geneExp4block --in_blocks_genome_folder $OUT_GENOME \
        --in_sortedBlock_file $IN_BLOCK_FILE \
        --in_deg_file $IN_EXPRESS \
        --in_feature_list 'TSS,gene,TES,5dist,enhancers' \
        --out_file_folder $OUT_EXPRESS
echo 4. find_geneExp4block - Done
echo ""
echo ""

#5. find patient IDs for each mutation block, this step will be slow if the number of blocks is large!
#but only run once for the block summary file exported by bpb3
#Path of mutation blocks with patient ID that will be exported by dds_analysis find_block_patientID
dds_analysis find_block_patientID \
	--in_block_summary_file ${IN_BLOCKS}/$IN_BLOCK_SUMMARY  \
	--in_block_folder $IN_BLOCKS
echo ""
echo 5. find_block_patientID - Done
echo ""
read -p "To continue please copy the export file name and path from step 5. find_block_patientID then click return : "  IN_BLOCK_PATIENT
echo "" 
echo "IN_BLOCK_PATIENT: $IN_BLOCK_PATIENT "
echo ""
echo ""

#6. combine DMR, DEG and mutatioin block information together
dds_analysis combine_dmr_deg2block --in_sortedBlock_patient_file $IN_BLOCK_PATIENT \
	--in_dmr_file  ${IN_BLOCK_DMR} \
        --in_deg_folder_and_file_suffix ${OUT_EXPRESS}'/*.tsv' \
	--out_file_folder $OUT_FINAL
echo 6. combine_dmr_deg2block - Done
echo ""
echo ""

#make file name of combined dmr, deg, and mutation block file for step 7
finds='.tsv'
replace=''
FULL_PATH_IN_BLOCK_DMR=${IN_BLOCK_DMR//$finds/$replace}
IN_BLOCK_DMR_NAME=$(basename  "$FULL_PATH_IN_BLOCK_DMR")
echo $IN_BLOCK_DMR_NAME

#7. filter blocks based DMR or DEG information ?
dds_analysis filter_blocks --in_combined_DmrDegBlock_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info.tsv
echo 7. filter_blocks - Done
echo ""
echo ""

#8. collect unique genes name from predicted blocks after filetering by  either "DMR or DEG" or "DMR and DEG" conditioin
dds_analysis collect_gene_names4blocks --in_filtered_blockGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_and_DEG.tsv
dds_analysis collect_gene_names4blocks --in_filtered_blockGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG.tsv
echo 8. collect_gene_names2blocks - Done
echo ""
echo ""

#9. filter mutation block and genes that they are not in the same TAD or boundariy
dds_analysis check_block_gene_inTAD --in_filtered_blockUqGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_and_DEG_uniqGene.tsv \
        --in_gene_position_file ${IN_GENE_POSITION} \
        --in_TAD_position_file ${IN_TAD_INFO}  \
        --in_TAD_boundary_file ${IN_TAD_BOUNDARY} 
echo 9a. check_block_gene_inTAD - Done for selecting blocks with both DMR and DEG 
echo ""
echo ""


dds_analysis check_block_gene_inTAD --in_filtered_blockUqGene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG_uniqGene.tsv \
        --in_gene_position_file ${IN_GENE_POSITION} \
        --in_TAD_position_file ${IN_TAD_INFO} \
        --in_TAD_boundary_file ${IN_TAD_BOUNDARY}
echo 9b. check_block_gene_inTAD - Done for selecting blocks with either DMR or DEG
echo ""
echo ""

#10. to rank gene list based on predefined weights such as default setting is
# tss=4, enhancer=3, tes=gene=2, 5dist=1
dds_analysis dds_geneRanking --in_unique_gene_file $OUT_FINAL/${IN_BLOCK_DMR_NAME}_deg_info_filtered_DMR_or_DEG_uniqGene_commonTAD_Boundary_list2UqGene.tsv \
       --in_DEG_file ${IN_EXPRESS} \
       --in_DMR_file ${IN_DMR} -inCutoff 0.5
echo 10. geneRanking - Done
echo ""
echo ""

#search for results files for extract selected gene's enhancer target in step 11
search_dir=`find ${OUT_FINAL} -name *_gt_* -type f ` 

echo "Find results file from below list: "
for entry in ${search_dir}
do
  echo "$entry"
done
echo ""
SEARCH_GENE='BCL2'
echo "and input one of file name and path to step 11"
echo ""
read -p "To select a file from the above list before running step 12. 
	 for finding enhancers that overlapping to selected mutation blocks with a predicted target gene $SEARCH_GENE 
	 : "  IN_FINAL_RESULT
echo "" 
echo "IN_FINAL_RESULT: $IN_FINAL_RESULT "
echo ""
echo ""
#11. find enhancer target genes
dds_analysis find_enhancer_target_genes --in_enhancer_file_folder ${IN_FOLDER}/in_enhancer/hg19_enhancer2gene_bed \
	--in_DDS_file ${IN_FINAL_RESULT} \
	--in_selected_gene ${SEARCH_GENE} --out_folder ${OUT_FINAL}/out_enhancers
echo 11. find_enhancer_target_genes - Done for $SEARCH_GENE
echo ""
echo ""




